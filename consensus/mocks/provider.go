// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	types "github.com/tendermint/tendermint/types"
)

// Provider is an autogenerated mock type for the Provider type
type Provider struct {
	mock.Mock
}

// ValidatorSet provides a mock function with given fields: ctx, height
func (_m *Provider) ValidatorSet(ctx context.Context, height *int64) (*types.ValidatorSet, int64, error) {
	ret := _m.Called(ctx, height)

	var r0 *types.ValidatorSet
	if rf, ok := ret.Get(0).(func(context.Context, *int64) *types.ValidatorSet); ok {
		r0 = rf(ctx, height)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.ValidatorSet)
		}
	}

	var r1 int64
	if rf, ok := ret.Get(1).(func(context.Context, *int64) int64); ok {
		r1 = rf(ctx, height)
	} else {
		r1 = ret.Get(1).(int64)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, *int64) error); ok {
		r2 = rf(ctx, height)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
